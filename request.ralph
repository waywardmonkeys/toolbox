(define-module toolbox/request
  import: (ralph/core ralph/regexp)
  export: (<request> send))

(define-class <request> ()
  in-progress?)

(define-method initialize ((request <request>) #key url
                             (method "GET") (asynchronous? #t)
                             content-type binary?)
  (bind ((xhr (set! (get request "xhr")
                    (make (js:inline "XMLHttpRequest")))))
    (when asynchronous?
      (set! (js:get-property xhr "onreadystatechange")
            (method (event)
              (when (== (js:get-property xhr "readyState") 4)
                (set! (get request "in-progress?") #f)
                (cond
                 ((== (js:get-property xhr "status") 200)
                  (bind ((text (js:get-property xhr "responseText"))
                         (data ""))
                    (when binary?
                      (do (method (char)
                            (set! data
                                  (js:+ data
                                        ((js:inline "String.fromCharCode")
                                         (js:& ((js:get-property char "charCodeAt") 0)
                                               0xff)))))
                          (as-array text)))
                    (trigger-event request
                                   (make-event "data" data: (if binary? data text)))))
                 ((get request "canceled?")
                  (trigger-event request (make-event "cancel")))
                 (else:
                  (trigger-event request (make-event "error"))))))))
    ((js:get-property xhr "open") method url asynchronous?)
    (when content-type
      ((js:get-property xhr "setRequestHeader")
       "Content-Type" content-type))
    (when binary?
      ((js:get-property xhr "overrideMimeType")
       "text/plain; charset=x-user-defined"))))


(define-function send ((request <request>) data)
  (set! (get request "in-progress?") #t)
  ((js:get-property request "xhr" "send") data))

(define-function cancel ((request <request>))
  (set! (get request "canceled?") #t)
  ((js:get-property request "xhr" "abort")))

;; events for XHR transfer (name, capture?):
;; - "progress", #f:
;;   event.lengthComputable => event.loaded, event.total
;; - "load", #f:
;;   transfer complete
;; - "error", #f:
;;   transfer failed
;; - "abort", #f:
;;   transfer has been canceled

(define encode-component (js:inline "encodeURIComponent"))

(define-function encode (object)
  (bind ((key-values (map (method (key)
                            (concatenate (encode-component key) "="
                                         (encode-component (get object key))))
                          (keys object))))
    (replace (join key-values "&")
             (make <regexp> pattern: "%20" global?: #t)
             "+")))
