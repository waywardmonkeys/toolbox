(define-module request
  import: (runtime/core)
  export: (<request> send))

(define <request> (js:identifier "XMLHttpRequest"))

(define-function initialize ((request <request>) #key url callback
                             (method "GET") (asynchronous? #t))
  (when asynchronous?
    (set! (js:get-property request "onreadystatechange")
          (method (event)
            (when (and (== (js:get-property request "readyState") 4)
                       (== (js:get-property request "status") 200))
              (callback (js:get-property request "responseText"))))))
  ((js:get-property request "open") method url asynchronous?)
  request)

;; events for reuquest (name, capture?):
;; - "progress", #f:
;;   event.lengthComputable => event.loaded, event.total
;; - "load", #f:
;;   transfer complete
;; - "error", #f:
;;   transfer failed
;; - "abort", #f:
;;   transfer has been canceled

(define-function send ((request <request>) data)
  ((js:get-property request "send") data))