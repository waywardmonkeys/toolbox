(define-module interface
  import: (runtime/core toolbox/dom)
  export: (<component> show hide attach))

(define-generic show (object))

(define-generic hide (object))

;; component

(define-class <component> ()
  element)

(define-generic attach (component target))

(define-function attach ((component <component>) element)
  (append-child (if (instance? element <component>)
                    (get element "element")
                    element)
                (get component "element")))

(define-function show ((component <component>))
  (add-class (get component "element") "active"))

(define-function hide ((component <component>))
  (remove-class (get component "element") "active"))


(define-generic update (component))
